#!/usr/bin/env ruby

packages=%w(
  bullet_train
  bullet_train-api
  bullet_train-fields
  bullet_train-has_uuid
  bullet_train-incoming_webhooks
  bullet_train-integrations
  bullet_train-integrations-stripe
  bullet_train-obfuscates_id
  bullet_train-outgoing_webhooks
  bullet_train-roles
  bullet_train-scope_questions
  bullet_train-scope_validator
  bullet_train-sortable
  bullet_train-super_load_and_authorize_resource
  bullet_train-super_scaffolding
  bullet_train-themes
  bullet_train-themes-light
  bullet_train-themes-tailwind_css
)

# First we run `bump` at the top level, mainly to have it update
# the CHANGELOG. We have a fake version file in `lib`, just to keep
# `bump` happy.

puts `bundle update #{packages.join(" ")}`

npm_packages=%w(
  @bullet-train/bullet-train
  @bullet-train/fields
  @bullet-train/bullet-train-sortable
)

puts `yarn upgrade #{packages.join(" ")}`

puts output = `bundle show bullet_train` # => /some/path/bullet_train-1.3.2

version = output.split('-').last

puts "The new version = #{version}"

# This block allows us to pass the new bump version out to the workflow.
github_output_file = ENV['GITHUB_OUTPUT']
if github_output_file
  IO.write(github_output_file, "NEW_VERSION_NUMBER=#{version}\n", mode: 'a')
end
