#!/usr/bin/env ruby
require "fileutils"
require "colorize"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

def command?(name)
  [name,
   *ENV['PATH'].split(File::PATH_SEPARATOR).map {|p| File.join(p, name)}
  ].find {|f| File.executable?(f)}
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts "== Checking dependencies =="
  if command?("overmind")
    puts "Overmind is already installed."
  else
    puts "Overmind not found".red
    puts "We recommend installing overmind to run your application processes"
    puts "Visit https://github.com/DarthSim/overmind#installation for more information."
  end

  puts "== Installing dependencies =="
  system! "gem install bundler --conservative"
  system("bundle check") || system!("bundle install")
  system("yarn check") || system!("yarn install")
  system!("bin/link")

  puts "== Building assets =="
  system!("yarn run build && yarn run build:css && yarn light:build:css")

  # puts "\n== Copying sample files =="
  # unless File.exist?("config/database.yml")
  #   FileUtils.cp "config/database.yml.sample", "config/database.yml"
  # end

  puts "\n== Preparing database =="
  system! "bin/rails db:prepare"

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"

  puts "\n== Copying `config/application.yml.example` to `config/application.yml`. =="
  if File.exist?("config/application.yml")
    puts "`config/application.yml` already exists!"
  else
    system! "cp config/application.yml.example config/application.yml"
  end

  puts "\n== Checking Redis connection =="
  redis_url = ENV.fetch("REDIS_URL", "redis://localhost:6379/1")
  result = `redis-cli -u #{redis_url} info clients`
  if result.include?("connected_clients")
    connected_clients = result.scan(/connected_clients:\d+/).first.split(":").last
    puts "You are connected to #{connected_clients} server#{"s" if connected_clients.to_i > 1}."
  else
    puts "You are not connected to a Redis server. Please run `$ redis-server` in another tab and run bin/setup again.".red
    exit 1
  end

  puts "\n== Restarting application server =="
  system! "bin/rails restart"
end
