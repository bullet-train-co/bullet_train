# This workflow runs the main test suite.
#
# This workflow is pimarily meant to be called by other workflows, but it can be run manually.
name: "ðŸ§ª ~ Run tests"
on:
  workflow_call:
    inputs:
      use-core-repo:
        required: false
        type: boolean
        default: false
  workflow_dispatch:
    inputs:
      use-core-repo:
        required: false
        type: boolean
        default: false

jobs:
  test:
    name: "ðŸ§ª"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Set identifiers for parallel jobs. These can be anything. Just include as many items as you want parallelism.
        # For instance if you want a Three Amigos themed pipeline you could use:
        # ci_node_index: [Dusty, Ned, Lucky]
        ci_runners: [1,2,3,4]
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - "6379:6379"
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
      # Manually export your local RAILS_MASTER_KEY if using the credentials system.
      # RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
      BUNDLE_JOBS: 2
      BUNDLE_RETRY: 3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: tmp/starter

      - name: Checkout Core Repo
        uses: bullet-train-co/checkout-repo-with-matching-branch@v1
        if: ${{ inputs.use-core-repo == true }}
        with:
          target_dir: tmp/core
          repository: bullet-train-co/bullet_train-core

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          working-directory: tmp/starter
          bundler-cache: true

      - uses: actions/setup-node@v3
        with:
          node-version-file: tmp/starter/.nvmrc
          cache: 'yarn'
          cache-dependency-path: tmp/starter/yarn.lock

      - name: Link Core Repo
        uses: bullet-train-co/link-core-gems@v1
        if: ${{ inputs.use-core-repo == true }}
        with:
          application_dir: tmp/starter
          core_dir: tmp/core

      - name: asset cache
        uses: actions/cache@v3
        with:
          path: |
            tmp/starter/public/assets
            tmp/starter/tmp/cache/assets/sprockets
          key: asset-cache-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            asset-cache-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
            asset-cache-${{ runner.os }}-${{ github.ref }}-
            asset-cache-${{ runner.os }}-

      - name: Set up database schema
        run: bin/rails db:schema:load
        working-directory: tmp/starter

      - run: yarn install
        working-directory: tmp/starter
      - run: yarn build
        working-directory: tmp/starter
      - run: yarn build:css
        working-directory: tmp/starter

      - name: Run Tests
        id: run-tests
        env:
          AUTH_ENDPOINT: https://no-site.nowhere
          AWS_REGION: us-east-1
          CI_NODE_TOTAL: ${{ strategy.job-total }}
          CI_NODE_INDEX: ${{ strategy.job-index }}
        continue-on-error: false
        run : ./bin/parallel-ci
        working-directory: tmp/starter
        shell: bash

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "tmp/starter/test/reports/**/TEST-*.xml"
        if: always()
