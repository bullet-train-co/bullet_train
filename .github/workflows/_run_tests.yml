# This workflow runs the main test suite.
#
# This workflow is pimarily meant to be called by other workflows, but it can be run manually.
name: "ðŸ§ª ~ Run tests"
on:
  workflow_call:
    inputs:
      use-core-repo:
        required: false
        type: boolean
        default: false
  workflow_dispatch:
    inputs:
      use-core-repo:
        required: false
        type: boolean
        default: false

jobs:
  calculate_matrix:
    name: ðŸ§® Calculate Dynamic Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.dynamic-matrix.outputs.matrix }}
      totalRunners: ${{ steps.dynamic-matrix.outputs.totalRunners }}
      testRunnersPerNode: ${{ steps.dynamic-matrix.outputs.testRunnersPerNode }}
    steps:
      - name: Dynamic Matrix
        id: dynamic-matrix
        uses: bullet-train-co/parallel-test-dynamic-matrix@v1
        with:
          # You can explicitly set the number of test nodes, or it will default to 4
          numberOfTestNodes: 4
          # You can explicitly set the number of runners per node, or it will default to 4 for public repos and 2 for private
          # testRunnersPerNode: 2

  test:
    name: "ðŸ§ª"
    runs-on: ubuntu-latest
    needs: calculate_matrix
    strategy:
      fail-fast: false
      matrix:
        parallel_test_groups: ${{ fromJson(needs.calculate_matrix.outputs.matrix) }}
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - "6379:6379"
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
      # Manually export your local RAILS_MASTER_KEY if using the credentials system.
      # RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      BUNDLE_JOBS: 2
      BUNDLE_RETRY: 3
      POSTGRES_USER: rails
      POSTGRES_PASSWORD: password
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: tmp/starter

      - name: Checkout Core Repo
        uses: bullet-train-co/checkout-repo-with-matching-branch@v1
        if: ${{ inputs.use-core-repo == true }}
        with:
          target_dir: tmp/core
          repository: bullet-train-co/bullet_train-core

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          working-directory: tmp/starter
          bundler-cache: true

      - name: Enable corepack
        run: corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version-file: tmp/starter/.nvmrc
          cache: 'yarn'
          cache-dependency-path: tmp/starter/yarn.lock

      - name: Link Core Repo
        uses: bullet-train-co/link-core-gems@v1
        if: ${{ inputs.use-core-repo == true }}
        with:
          application_dir: tmp/starter
          core_dir: tmp/core

      - name: asset cache
        uses: actions/cache@v4
        with:
          path: |
            tmp/starter/public/assets
            tmp/starter/tmp/cache/assets/sprockets
          key: asset-cache-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            asset-cache-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
            asset-cache-${{ runner.os }}-${{ github.ref }}-
            asset-cache-${{ runner.os }}-

      - name: runtime log cache
        uses: actions/cache/restore@v4
        with:
          path: |
            tmp/starter/tmp/parallel_runtime_test.log
          key: runtime-cache-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            runtime-cache-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
            runtime-cache-${{ runner.os }}-${{ github.ref }}-
            runtime-cache-${{ runner.os }}-

      # We generate a fake secret because of this issue:
      # https://github.com/rails/rails/issues/53661
      - name: Generate a fake secret
        shell: bash
        run: echo $(ruby -e "require 'securerandom'; puts SecureRandom.hex(64)") > tmp/local_secret.txt
        working-directory: tmp/starter

      - name: Set up database schema
        run: bin/rake parallel:setup[${{ fromJson(needs.calculate_matrix.outputs.testRunnersPerNode) }}]
        working-directory: tmp/starter

      - run: yarn install
        working-directory: tmp/starter
      - run: yarn build
        working-directory: tmp/starter
      - run: yarn build:css
        working-directory: tmp/starter

      # We touch this file so that parallel_tests doesn't complain about it not being there.
      # Without doing this it's hard to get tests running in a new repo without some hoop jumping.
      - name: Touch Parallel Tests Runtime Log
        run: touch tmp/parallel_runtime_test.log
        working-directory: tmp/starter
        shell: bash

      - name: cat runtime log
        run: cat tmp/starter/tmp/parallel_runtime_test.log
        shell: bash

      - name: Run tests
        id: run-tests
        env:
          AUTH_ENDPOINT: https://no-site.nowhere
          AWS_REGION: us-east-1
          PARALLEL_TESTS_RECORD_RUNTIME: true
        run: |
          bundle exec parallel_test test \
          -n ${{ fromJson(needs.calculate_matrix.outputs.totalRunners) }} \
          --only-group ${{ matrix.parallel_test_groups }} \
          --group-by runtime \
          --allowed-missing 100 \
          --verbose \
          --verbose-command
        working-directory: tmp/starter
        continue-on-error: false
        shell: bash

      - name: Upload Parallel Test Runtime Log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: parallel_runtime_test_${{ matrix.parallel_test_groups }}.log
          path: tmp/starter/tmp/parallel_runtime_test.log

      - name: Upload Test Coverage Data
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test_coverage_${{ matrix.parallel_test_groups }}.log
          path: tmp/starter/coverage/.resultset.json
          include-hidden-files: true

      - name: Upload Test Summary Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test_summary_${{ matrix.parallel_test_groups }}.log
          path: tmp/starter/test/reports*/**/TEST-*.xml
